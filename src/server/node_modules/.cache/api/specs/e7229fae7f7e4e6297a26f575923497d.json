{
  "openapi": "3.0.1",
  "info": {
    "title": "Orders API",
    "description": "Orders API",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://integration.api.scalapay.com",
      "description": "Sandbox server (uses test data)"
    },
    {
      "url": "https://api.scalapay.com",
      "description": "Production server (uses live data)"
    }
  ],
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "paths": {
    "/v2/orders": {
      "post": {
        "summary": "create order",
        "description": "This POST call is mandatory to create the order. Merchant makes a call to /v2/orders and receives an order-token as well as the redirectUrl to send the customer to Scalapay website to authorize the payment.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "consumer",
                  "items",
                  "merchant",
                  "shipping",
                  "totalAmount"
                ],
                "type": "object",
                "properties": {
                  "totalAmount": {
                    "required": [
                      "amount",
                      "currency"
                    ],
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "string",
                        "description": "Amount of the order"
                      },
                      "currency": {
                        "type": "string",
                        "description": "Currency type (should be EUR)",
                        "default": "EUR"
                      }
                    },
                    "description": "Total Amount of the order"
                  },
                  "consumer": {
                    "required": [
                      "givenNames",
                      "surname"
                    ],
                    "type": "object",
                    "properties": {
                      "phoneNumber": {
                        "type": "string"
                      },
                      "givenNames": {
                        "type": "string",
                        "description": "First name"
                      },
                      "surname": {
                        "type": "string",
                        "description": "Last name"
                      },
                      "email": {
                        "type": "string",
                        "description": "Consumer's email"
                      }
                    },
                    "description": "Consumer's data"
                  },
                  "billing": {
                    "type": "object",
                    "properties": {
                      "phoneNumber": {
                        "type": "string"
                      },
                      "countryCode": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "postcode": {
                        "type": "string"
                      },
                      "suburb": {
                        "type": "string"
                      },
                      "line1": {
                        "type": "string"
                      }
                    }
                  },
                  "shipping": {
                    "required": [
                      "countryCode",
                      "line1",
                      "name",
                      "postcode",
                      "suburb"
                    ],
                    "type": "object",
                    "properties": {
                      "phoneNumber": {
                        "type": "string",
                        "description": "Customer's phone number"
                      },
                      "countryCode": {
                        "type": "string",
                        "description": "Two letter code"
                      },
                      "name": {
                        "type": "string"
                      },
                      "postcode": {
                        "type": "string"
                      },
                      "suburb": {
                        "type": "string"
                      },
                      "line1": {
                        "type": "string"
                      }
                    }
                  },
                  "items": {
                    "type": "array",
                    "items": {
                      "required": [
                        "category",
                        "name",
                        "price",
                        "quantity",
                        "sku"
                      ],
                      "type": "object",
                      "properties": {
                        "gtin": {
                          "type": "string",
                          "description": "Global Trade Item Number. One of [UPC, EAN, JAN, ISBN, ITF-14]"
                        },
                        "quantity": {
                          "type": "integer"
                        },
                        "price": {
                          "required": [
                            "amount",
                            "currency"
                          ],
                          "type": "object",
                          "properties": {
                            "amount": {
                              "type": "string"
                            },
                            "currency": {
                              "type": "string",
                              "default": "EUR"
                            }
                          }
                        },
                        "name": {
                          "type": "string"
                        },
                        "category": {
                          "type": "string"
                        },
                        "subcategory": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "sku": {
                          "type": "string",
                          "description": "Stock Keeping Unit code"
                        },
                        "brand": {
                          "type": "string"
                        },
                        "pageUrl": {
                          "type": "string"
                        },
                        "imageUrl": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "discounts": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "amount": {
                          "required": [
                            "amount",
                            "currency"
                          ],
                          "type": "object",
                          "properties": {
                            "amount": {
                              "type": "string"
                            },
                            "currency": {
                              "type": "string",
                              "default": "EUR"
                            }
                          }
                        },
                        "displayName": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "merchant": {
                    "required": [
                      "redirectCancelUrl",
                      "redirectConfirmUrl"
                    ],
                    "type": "object",
                    "properties": {
                      "redirectCancelUrl": {
                        "type": "string",
                        "description": "use -https://portal.integration.scalapay.com/failure-url for testing"
                      },
                      "redirectConfirmUrl": {
                        "type": "string",
                        "description": "use -https://portal.integration.scalapay.com/success-url for testing"
                      }
                    }
                  },
                  "merchantReference": {
                    "type": "string"
                  },
                  "shippingAmount": {
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "string"
                      },
                      "currency": {
                        "type": "string",
                        "default": "EUR"
                      }
                    }
                  },
                  "taxAmount": {
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "string"
                      },
                      "currency": {
                        "type": "string",
                        "default": "EUR"
                      }
                    }
                  },
                  "type": {
                    "type": "string",
                    "default": "online",
                    "enum": [
                      "online",
                      "offline"
                    ]
                  },
                  "product": {
                    "type": "string",
                    "default": "pay-in-3",
                    "enum": [
                      "pay-in-3",
                      "pay-in-4",
                      "later"
                    ]
                  },
                  "frequency": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "integer",
                        "default": 1
                      },
                      "frequencyType": {
                        "type": "string",
                        "default": "monthly"
                      }
                    }
                  },
                  "orderExpiryMilliseconds": {
                    "type": "integer",
                    "description": "Optional",
                    "default": 600000
                  }
                }
              },
              "example": {
                "totalAmount": {
                  "amount": "190.00",
                  "currency": "EUR"
                },
                "consumer": {
                  "phoneNumber": "0400000001",
                  "givenNames": "Joe",
                  "surname": "Consumer",
                  "email": "test@scalapay.com"
                },
                "billing": {
                  "name": "Joe Consumer",
                  "line1": "Via della Rosa, 58",
                  "suburb": "Montelupo Fiorentino",
                  "postcode": "50056",
                  "countryCode": "IT",
                  "phoneNumber": "0400000000"
                },
                "shipping": {
                  "name": "Joe Consumer",
                  "line1": "Via della Rosa, 58",
                  "suburb": "Montelupo Fiorentino",
                  "postcode": "50056",
                  "countryCode": "IT",
                  "phoneNumber": "0400000000"
                },
                "items": [
                  {
                    "name": "T-Shirt",
                    "category": "clothes",
                    "subcategory": [
                      "shirt",
                      "long-sleeve"
                    ],
                    "brand": "TopChoice",
                    "gtin": "123458791330",
                    "sku": "12341234",
                    "quantity": 1,
                    "price": {
                      "amount": "10.00",
                      "currency": "EUR"
                    },
                    "pageUrl": "https://www.scalapay.com//product/view/",
                    "imageUrl": "https://www.scalapay.com//product/view/"
                  },
                  {
                    "name": "Jeans",
                    "category": "clothes",
                    "subcategory": [
                      "pants",
                      "jeans"
                    ],
                    "brand": "TopChoice",
                    "gtin": "123458722222",
                    "sku": "12341235",
                    "quantity": 1,
                    "price": {
                      "amount": "20.00",
                      "currency": "EUR"
                    }
                  }
                ],
                "discounts": [
                  {
                    "displayName": "10% Off",
                    "amount": {
                      "amount": "3.00",
                      "currency": "EUR"
                    }
                  }
                ],
                "merchant": {
                  "redirectConfirmUrl": "https://portal.integration.scalapay.com/success-url",
                  "redirectCancelUrl": "https://portal.integration.scalapay.com/failure-url"
                },
                "merchantReference": "merchantOrder-1234",
                "taxAmount": {
                  "amount": "3.70",
                  "currency": "EUR"
                },
                "shippingAmount": {
                  "amount": "10.00",
                  "currency": "EUR"
                },
                "type": "online",
                "product": "pay-in-3",
                "frequency": {
                  "number": "1",
                  "frequencyType": "monthly"
                },
                "orderExpiryMilliseconds": 600000
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "example": {
                  "token": "71KH916VPE",
                  "expires": "2022-11-08T13:06:17.858Z",
                  "checkoutUrl": "https://portal.integration.scalapay.com/checkout/71KH916VPE"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "errorCode": "api_validationerror",
                  "errorId": "error-19g6ll3ucve9e",
                  "message": {
                    "status": 400,
                    "statusText": "Bad Request",
                    "errors": [
                      {
                        "field": [
                          "totalAmount",
                          "amount"
                        ],
                        "location": "body",
                        "messages": [
                          "\"amount\" is not allowed to be empty"
                        ],
                        "types": [
                          "any.empty"
                        ]
                      }
                    ]
                  },
                  "httpStatusCode": 400
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "example": "Unauthorized"
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "servers": [
          {
            "url": "https://integration.api.scalapay.com"
          }
        ]
      },
      "servers": [
        {
          "url": "https://integration.api.scalapay.com"
        }
      ]
    },
    "/v2/orders/{token}": {
      "post": {
        "summary": "update order",
        "description": "When a merchant is not able to pass the merchantReference in the /v2/orders call then they can subsequently make a call to /v2/orders/{token} with the appropriate merchant reference ID.",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Order Token",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "minimum": 1,
              "type": "string",
              "format": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "merchantReference"
                ],
                "type": "object",
                "properties": {
                  "merchantReference": {
                    "type": "string"
                  }
                }
              },
              "example": {
                "merchantReference": "merchantOrder-updated"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json; charset=utf-8": {
                "example": {
                  "token": "71KH916VPE"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "example": "Unauthorized"
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "servers": [
          {
            "url": "https://integration.api.scalapay.com"
          }
        ]
      },
      "servers": [
        {
          "url": "https://integration.api.scalapay.com"
        }
      ]
    },
    "/v2/payments/{token}/delay": {
      "post": {
        "summary": "delay order",
        "description": "Merchant informs Scalapay it is requesting a delayed capture by calling /v2/payments/{token}/delay. The payment schedule for the customer will be created however no settlement of funds will occur until a capture call is made. Outstanding authorizations will be automatically VOIDED once the authorizationExpiryMilliseconds time passes.",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Order Token",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "minimum": 1,
              "type": "string",
              "format": "string"
            },
            "example": "71KH916VPE"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "authorizationExpiryMilliseconds": {
                    "type": "integer",
                    "description": "Length of time that the authorization is valid for",
                    "default": 432000000
                  },
                  "merchantReference": {
                    "type": "string",
                    "description": "Unique reference that identifies merchant"
                  }
                }
              },
              "example": {
                "authorizationExpiryMilliseconds": 432000000,
                "merchantReference": "merchantOrder-1234"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "example": {
                  "token": "21KLLDH3HI",
                  "status": "AUTHORIZED",
                  "authorizationExpiryAt": "2021-02-25T23:02:13.000Z",
                  "totalAmount": {
                    "amount": "40.7",
                    "currency": "EUR"
                  },
                  "orderDetails": {
                    "items": [
                      {
                        "sku": "12341234",
                        "gtin": "123458791330",
                        "name": "T-Shirt",
                        "brand": "TopChoice",
                        "price": {
                          "amount": "10.00",
                          "currency": "EUR"
                        },
                        "category": "clothes",
                        "quantity": 1,
                        "subcategory": [
                          "shirt",
                          "long-sleeve"
                        ]
                      },
                      {
                        "sku": "12341235",
                        "gtin": "123458722222",
                        "name": "Jeans",
                        "brand": "TopChoice",
                        "price": {
                          "amount": "20.00",
                          "currency": "EUR"
                        },
                        "category": "clothes",
                        "quantity": 1,
                        "subcategory": [
                          "pants",
                          "jeans"
                        ]
                      }
                    ],
                    "billing": {
                      "name": "Joe Consumer",
                      "line1": "Via della Rosa, 23",
                      "suburb": "Montelupo Fiorentino",
                      "postcode": "50056",
                      "countryCode": "IT",
                      "phoneNumber": "0400000000"
                    },
                    "consumer": {
                      "email": "test@scalapay.com",
                      "surname": "Consumer",
                      "givenNames": "Joe",
                      "phoneNumber": "0400000001"
                    },
                    "merchant": {
                      "redirectCancelUrl": "https://portal.integration.com/failure-url",
                      "redirectConfirmUrl": "https://portal.integration.scalapay.com/success-url"
                    },
                    "shipping": {
                      "name": "Joe Consumer",
                      "line1": "Via della Rosa, 23",
                      "suburb": "Montelupo Fiorentino",
                      "geoCode": {
                        "place_id": "VklBK0RFTExBK1JPU0ErMjMrLE1PTlRFTFVQTytGSU9SRU5USU5PLDUwMDU2LElU"
                      },
                      "postcode": "50056",
                      "countryCode": "IT",
                      "phoneNumber": "0400000000"
                    },
                    "discounts": [
                      {
                        "amount": {
                          "amount": "3.00",
                          "currency": "EUR"
                        },
                        "displayName": "10% Off"
                      }
                    ],
                    "taxAmount": {
                      "amount": "3.70",
                      "currency": "EUR"
                    },
                    "totalAmount": {
                      "amount": "40.70",
                      "currency": "EUR"
                    },
                    "shippingAmount": {
                      "amount": "10.00",
                      "currency": "EUR"
                    },
                    "merchantReference": "merchantOrder-1234"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "example": "Unauthorized"
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://integration.api.scalapay.com"
          }
        ]
      },
      "servers": [
        {
          "url": "https://integration.api.scalapay.com"
        }
      ]
    },
    "/v2/payments/capture": {
      "post": {
        "summary": "capture order",
        "description": "Merchant captures the payment by calling /v2/payments/capture and funds are deducted from user account and transferred to merchant account.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "amount",
                "required": [
                  "token"
                ],
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "string",
                        "description": "Currency type (should be EUR)",
                        "default": "EUR"
                      },
                      "amount": {
                        "type": "string",
                        "description": "Amount of the order",
                        "default": "190.00"
                      }
                    }
                  }
                }
              },
              "example": {
                "token": "71KH916VPE",
                "amount": "190.00"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "example": {
                  "token": "71KH916VPE",
                  "status": "APPROVED",
                  "amount": {
                    "currency": "EUR",
                    "amount": "190.00"
                  },
                  "orderDetails": {
                    "items": [
                      {
                        "sku": "12341234",
                        "gtin": "123458791330",
                        "name": "T-Shirt",
                        "brand": "TopChoice",
                        "price": {
                          "amount": "10.00",
                          "currency": "EUR"
                        },
                        "category": "clothes",
                        "quantity": 1,
                        "subcategory": [
                          "shirt",
                          "long-sleeve"
                        ]
                      },
                      {
                        "sku": "12341235",
                        "gtin": "123458722222",
                        "name": "Jeans",
                        "brand": "TopChoice",
                        "price": {
                          "amount": "20.00",
                          "currency": "EUR"
                        },
                        "category": "clothes",
                        "quantity": 1,
                        "subcategory": [
                          "pants",
                          "jeans"
                        ]
                      }
                    ],
                    "billing": {
                      "name": "Joe Consumer",
                      "line1": "Via della Rosa, 58",
                      "suburb": "Montelupo Fiorentino",
                      "postcode": "50056",
                      "countryCode": "IT",
                      "phoneNumber": "0400000000"
                    },
                    "consumer": {
                      "email": "test@scalapay.com",
                      "surname": "Consumer",
                      "givenNames": "Joe",
                      "phoneNumber": "0400000001"
                    },
                    "merchant": {
                      "redirectCancelUrl": "https://integration.api.scalapay.com/failure-url",
                      "redirectConfirmUrl": "https://integration.api.scalapay.com/success-url"
                    },
                    "shipping": {
                      "name": "Joe Consumer",
                      "line1": "Via della Rosa, 58",
                      "suburb": "Montelupo Fiorentino",
                      "postcode": "50056",
                      "countryCode": "IT",
                      "phoneNumber": "0400000000"
                    },
                    "discounts": [
                      {
                        "amount": {
                          "amount": "3.00",
                          "currency": "EUR"
                        },
                        "displayName": "10% Off"
                      }
                    ],
                    "taxAmount": {
                      "amount": "3.70",
                      "currency": "EUR"
                    },
                    "totalAmount": {
                      "amount": "190.00",
                      "currency": "EUR"
                    },
                    "shippingAmount": {
                      "amount": "10.00",
                      "currency": "EUR"
                    },
                    "merchantReference": "merchantOrder-1234-updated"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "example": "Unauthorized"
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "servers": [
          {
            "url": "https://integration.api.scalapay.com"
          }
        ]
      },
      "servers": [
        {
          "url": "https://integration.api.scalapay.com"
        }
      ]
    },
    "/v2/payments/{token}": {
      "get": {
        "summary": "get order details",
        "description": "Check the status of a payment",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Order Token",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "minimum": 1,
              "type": "string",
              "format": "string"
            },
            "example": "71KH916VPE"
          }
        ],
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "example": {
                  "token": "71KH916VPE",
                  "created": "2020-11-08T11:26:17.000Z",
                  "status": "charged",
                  "totalAmount": {
                    "amount": "190.00",
                    "currency": "EUR"
                  },
                  "orderDetails": {
                    "items": [
                      {
                        "sku": "12341234",
                        "gtin": "123458791330",
                        "name": "T-Shirt",
                        "brand": "TopChoice",
                        "price": {
                          "amount": "10.00",
                          "currency": "EUR"
                        },
                        "category": "clothes",
                        "quantity": 1,
                        "subcategory": [
                          "shirt",
                          "long-sleeve"
                        ]
                      },
                      {
                        "sku": "12341235",
                        "gtin": "123458722222",
                        "name": "Jeans",
                        "brand": "TopChoice",
                        "price": {
                          "amount": "20.00",
                          "currency": "EUR"
                        },
                        "category": "clothes",
                        "quantity": 1,
                        "subcategory": [
                          "pants",
                          "jeans"
                        ]
                      }
                    ],
                    "billing": {
                      "name": "Joe Consumer",
                      "line1": "Via della Rosa, 58",
                      "suburb": "Montelupo Fiorentino",
                      "postcode": "50056",
                      "countryCode": "IT",
                      "phoneNumber": "0400000000"
                    },
                    "consumer": {
                      "email": "test@scalapay.com",
                      "surname": "Consumer",
                      "givenNames": "Joe",
                      "phoneNumber": "0400000001"
                    },
                    "merchant": {
                      "redirectCancelUrl": "https://integration.api.scalapay.com/failure-url",
                      "redirectConfirmUrl": "https://integration.api.scalapay.com/success-url"
                    },
                    "shipping": {
                      "name": "Joe Consumer",
                      "line1": "Via della Rosa, 58",
                      "suburb": "Montelupo Fiorentino",
                      "geoCode": {
                        "place_id": "VklBK0RFTExBK1JPU0ErNTgrLE1PTlRFTFVQTytGSU9SRU5USU5PLDUwMDU2LElU"
                      },
                      "postcode": "50056",
                      "countryCode": "IT",
                      "phoneNumber": "0400000000"
                    },
                    "discounts": [
                      {
                        "amount": {
                          "amount": "3.00",
                          "currency": "EUR"
                        },
                        "displayName": "10% Off"
                      }
                    ],
                    "taxAmount": {
                      "amount": "3.70",
                      "currency": "EUR"
                    },
                    "totalAmount": {
                      "amount": "190.00",
                      "currency": "EUR"
                    },
                    "shippingAmount": {
                      "amount": "10.00",
                      "currency": "EUR"
                    },
                    "merchantReference": "merchantOrder-1234-updated"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "example": "Unauthorized"
              }
            }
          },
          "422": {
            "description": "422 Unprocessable Entity",
            "content": {
              "application/json": {
                "example": {
                  "errorCode": "invalid_token",
                  "errorId": "error-19g6ll3ud3ndj",
                  "message": "Order null not found",
                  "httpStatusCode": 422
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://integration.api.scalapay.com"
          }
        ]
      },
      "servers": [
        {
          "url": "https://integration.api.scalapay.com"
        }
      ]
    },
    "/v2/payments/{token}/refund": {
      "post": {
        "summary": "refund order",
        "description": "Merchant is able to refund a payment by calling /v2/payments/{token}/refund. The funds will be reversed from the merchant account, and then refunded to the customer.",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Order Token",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "minimum": 1,
              "type": "string",
              "format": "string"
            },
            "example": "71KH916VPE"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "refundAmount"
                ],
                "type": "object",
                "properties": {
                  "refundAmount": {
                    "required": [
                      "amount",
                      "currency"
                    ],
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "string"
                      },
                      "currency": {
                        "type": "string",
                        "default": "EUR"
                      }
                    }
                  },
                  "merchantRefundReference": {
                    "type": "string"
                  }
                }
              },
              "example": {
                "refundAmount": {
                  "amount": "190.00",
                  "currency": "EUR"
                },
                "merchantRefundReference": "ABC123"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK - Refund information",
            "content": {
              "application/json": {
                "example": {
                  "token": "71KH916VPE",
                  "amount": {
                    "amount": "190.00",
                    "currency": "EUR"
                  },
                  "merchantReference": "ABC123",
                  "merchantRefundReference": "ABC123",
                  "refundToken": "pre_transfer",
                  "refundedAt": "2020-11-08T11:32:06.502Z"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "errorCode": "pre_condition_failed",
                  "errorId": "error-19g6ll3uee193",
                  "message": "Order null not found",
                  "httpStatusCode": 400
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "example": "Unauthorized"
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://integration.api.scalapay.com"
          }
        ]
      },
      "servers": [
        {
          "url": "https://integration.api.scalapay.com"
        }
      ]
    },
    "/v2/payments/{token}/void": {
      "post": {
        "summary": "void order",
        "description": "If a merchant is unable to fulfill an order they call /v2/payments/{token}/void to void any authorizations against the order. The customer will be informed of the cancellation and that the order could not be fulfilled and any funds held will be released.",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Order Token",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "minimum": 1,
              "type": "string",
              "format": "string"
            },
            "example": "71KH916VPE"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "merchantReference": {
                    "type": "string"
                  }
                }
              },
              "example": {
                "merchantReference": "RF127261AD22"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "example": {
                  "token": "B1KLLDPMIH",
                  "merchantReference": "RF127261AD22",
                  "voidedAt": "2021-02-25T21:29:41.835Z"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "errorCode": "pre_condition_failed",
                  "errorId": "error-19g6ll3uee193",
                  "message": "Order null not found",
                  "httpStatusCode": 400
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "example": "Unauthorized"
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://integration.api.scalapay.com"
          }
        ]
      },
      "servers": [
        {
          "url": "https://integration.api.scalapay.com"
        }
      ]
    }
  },
  "components": {
    "schemas": {
      "v2orders_type": {
        "type": "string",
        "default": "online",
        "enum": [
          "online",
          "offline"
        ]
      },
      "v2orders_product": {
        "type": "string",
        "default": "pay-in-3",
        "enum": [
          "pay-in-3",
          "pay-in-4",
          "later"
        ]
      },
      "v2orders_frequency": {
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "default": 1
          },
          "frequencyType": {
            "type": "string",
            "default": "monthly"
          }
        }
      },
      "v2orders_price": {
        "required": [
          "amount",
          "currency"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "type": "string"
          },
          "currency": {
            "type": "string",
            "default": "EUR"
          }
        }
      },
      "v2orders_shipping": {
        "required": [
          "countryCode",
          "line1",
          "name",
          "postcode",
          "suburb"
        ],
        "type": "object",
        "properties": {
          "phoneNumber": {
            "type": "string",
            "description": "Customer's phone number"
          },
          "countryCode": {
            "type": "string",
            "description": "Two letter code"
          },
          "name": {
            "type": "string"
          },
          "postcode": {
            "type": "string"
          },
          "suburb": {
            "type": "string"
          },
          "line1": {
            "type": "string"
          }
        }
      },
      "v2orders_discounts": {
        "type": "object",
        "properties": {
          "amount": {
            "required": [
              "amount",
              "currency"
            ],
            "type": "object",
            "properties": {
              "amount": {
                "type": "string"
              },
              "currency": {
                "type": "string",
                "default": "EUR"
              }
            }
          },
          "displayName": {
            "type": "string"
          }
        }
      },
      "v2orders_shippingAmount": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "string"
          },
          "currency": {
            "type": "string",
            "default": "EUR"
          }
        }
      },
      "v2orders_consumer": {
        "required": [
          "givenNames",
          "surname"
        ],
        "type": "object",
        "properties": {
          "phoneNumber": {
            "type": "string"
          },
          "givenNames": {
            "type": "string",
            "description": "First name"
          },
          "surname": {
            "type": "string",
            "description": "Last name"
          },
          "email": {
            "type": "string",
            "description": "Consumer's email"
          }
        },
        "description": "Consumer's data"
      },
      "v2order_body": {
        "required": [
          "consumer",
          "items",
          "merchant",
          "shipping",
          "totalAmount"
        ],
        "type": "object",
        "properties": {
          "totalAmount": {
            "required": [
              "amount",
              "currency"
            ],
            "type": "object",
            "properties": {
              "amount": {
                "type": "string",
                "description": "Amount of the order"
              },
              "currency": {
                "type": "string",
                "description": "Currency type (should be EUR)",
                "default": "EUR"
              }
            },
            "description": "Total Amount of the order"
          },
          "consumer": {
            "required": [
              "givenNames",
              "surname"
            ],
            "type": "object",
            "properties": {
              "phoneNumber": {
                "type": "string"
              },
              "givenNames": {
                "type": "string",
                "description": "First name"
              },
              "surname": {
                "type": "string",
                "description": "Last name"
              },
              "email": {
                "type": "string",
                "description": "Consumer's email"
              }
            },
            "description": "Consumer's data"
          },
          "billing": {
            "type": "object",
            "properties": {
              "phoneNumber": {
                "type": "string"
              },
              "countryCode": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "postcode": {
                "type": "string"
              },
              "suburb": {
                "type": "string"
              },
              "line1": {
                "type": "string"
              }
            }
          },
          "shipping": {
            "required": [
              "countryCode",
              "line1",
              "name",
              "postcode",
              "suburb"
            ],
            "type": "object",
            "properties": {
              "phoneNumber": {
                "type": "string",
                "description": "Customer's phone number"
              },
              "countryCode": {
                "type": "string",
                "description": "Two letter code"
              },
              "name": {
                "type": "string"
              },
              "postcode": {
                "type": "string"
              },
              "suburb": {
                "type": "string"
              },
              "line1": {
                "type": "string"
              }
            }
          },
          "items": {
            "type": "array",
            "items": {
              "required": [
                "category",
                "name",
                "price",
                "quantity",
                "sku"
              ],
              "type": "object",
              "properties": {
                "gtin": {
                  "type": "string",
                  "description": "Global Trade Item Number. One of [UPC, EAN, JAN, ISBN, ITF-14]"
                },
                "quantity": {
                  "type": "integer"
                },
                "price": {
                  "required": [
                    "amount",
                    "currency"
                  ],
                  "type": "object",
                  "properties": {
                    "amount": {
                      "type": "string"
                    },
                    "currency": {
                      "type": "string",
                      "default": "EUR"
                    }
                  }
                },
                "name": {
                  "type": "string"
                },
                "category": {
                  "type": "string"
                },
                "subcategory": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "sku": {
                  "type": "string",
                  "description": "Stock Keeping Unit code"
                },
                "brand": {
                  "type": "string"
                },
                "pageUrl": {
                  "type": "string"
                },
                "imageUrl": {
                  "type": "string"
                }
              }
            }
          },
          "discounts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "amount": {
                  "required": [
                    "amount",
                    "currency"
                  ],
                  "type": "object",
                  "properties": {
                    "amount": {
                      "type": "string"
                    },
                    "currency": {
                      "type": "string",
                      "default": "EUR"
                    }
                  }
                },
                "displayName": {
                  "type": "string"
                }
              }
            }
          },
          "merchant": {
            "required": [
              "redirectCancelUrl",
              "redirectConfirmUrl"
            ],
            "type": "object",
            "properties": {
              "redirectCancelUrl": {
                "type": "string",
                "description": "use -https://portal.integration.scalapay.com/failure-url for testing"
              },
              "redirectConfirmUrl": {
                "type": "string",
                "description": "use -https://portal.integration.scalapay.com/success-url for testing"
              }
            }
          },
          "merchantReference": {
            "type": "string"
          },
          "shippingAmount": {
            "type": "object",
            "properties": {
              "amount": {
                "type": "string"
              },
              "currency": {
                "type": "string",
                "default": "EUR"
              }
            }
          },
          "taxAmount": {
            "type": "object",
            "properties": {
              "amount": {
                "type": "string"
              },
              "currency": {
                "type": "string",
                "default": "EUR"
              }
            }
          },
          "type": {
            "type": "string",
            "default": "online",
            "enum": [
              "online",
              "offline"
            ]
          },
          "product": {
            "type": "string",
            "default": "pay-in-3",
            "enum": [
              "pay-in-3",
              "pay-in-4",
              "later"
            ]
          },
          "frequency": {
            "type": "object",
            "properties": {
              "number": {
                "type": "integer",
                "default": 1
              },
              "frequencyType": {
                "type": "string",
                "default": "monthly"
              }
            }
          },
          "orderExpiryMilliseconds": {
            "type": "integer",
            "description": "Optional",
            "default": 600000
          }
        }
      },
      "v2orders_items": {
        "required": [
          "category",
          "name",
          "price",
          "quantity",
          "sku"
        ],
        "type": "object",
        "properties": {
          "gtin": {
            "type": "string",
            "description": "Global Trade Item Number. One of [UPC, EAN, JAN, ISBN, ITF-14]"
          },
          "quantity": {
            "type": "integer"
          },
          "price": {
            "required": [
              "amount",
              "currency"
            ],
            "type": "object",
            "properties": {
              "amount": {
                "type": "string"
              },
              "currency": {
                "type": "string",
                "default": "EUR"
              }
            }
          },
          "name": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "subcategory": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sku": {
            "type": "string",
            "description": "Stock Keeping Unit code"
          },
          "brand": {
            "type": "string"
          },
          "pageUrl": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          }
        }
      },
      "v2delay_body": {
        "type": "object",
        "properties": {
          "authorizationExpiryMilliseconds": {
            "type": "integer",
            "description": "Length of time that the authorization is valid for",
            "default": 432000000
          },
          "merchantReference": {
            "type": "string",
            "description": "Unique reference that identifies merchant"
          }
        }
      },
      "v2void_body": {
        "type": "object",
        "properties": {
          "merchantReference": {
            "type": "string"
          }
        }
      },
      "refund_body": {
        "required": [
          "refundAmount"
        ],
        "type": "object",
        "properties": {
          "refundAmount": {
            "required": [
              "amount",
              "currency"
            ],
            "type": "object",
            "properties": {
              "amount": {
                "type": "string"
              },
              "currency": {
                "type": "string",
                "default": "EUR"
              }
            }
          },
          "merchantRefundReference": {
            "type": "string"
          }
        }
      },
      "v2orders_billing": {
        "type": "object",
        "properties": {
          "phoneNumber": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "postcode": {
            "type": "string"
          },
          "suburb": {
            "type": "string"
          },
          "line1": {
            "type": "string"
          }
        }
      },
      "v2order_update": {
        "required": [
          "merchantReference"
        ],
        "type": "object",
        "properties": {
          "merchantReference": {
            "type": "string"
          }
        }
      },
      "v2payment_capture": {
        "title": "amount",
        "required": [
          "token"
        ],
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "amount": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string",
                "description": "Currency type (should be EUR)",
                "default": "EUR"
              },
              "amount": {
                "type": "string",
                "description": "Amount of the order",
                "default": "190.00"
              }
            }
          }
        }
      },
      "v2orders_amount": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Currency type (should be EUR)",
            "default": "EUR"
          },
          "amount": {
            "type": "string",
            "description": "Amount of the order",
            "default": "190.00"
          }
        }
      },
      "v2orders_totalAmount": {
        "required": [
          "amount",
          "currency"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "type": "string",
            "description": "Amount of the order"
          },
          "currency": {
            "type": "string",
            "description": "Currency type (should be EUR)",
            "default": "EUR"
          }
        },
        "description": "Total Amount of the order"
      },
      "v2orders_merchant": {
        "required": [
          "redirectCancelUrl",
          "redirectConfirmUrl"
        ],
        "type": "object",
        "properties": {
          "redirectCancelUrl": {
            "type": "string",
            "description": "use -https://portal.integration.scalapay.com/failure-url for testing"
          },
          "redirectConfirmUrl": {
            "type": "string",
            "description": "use -https://portal.integration.scalapay.com/success-url for testing"
          }
        }
      }
    },
    "responses": {
      "401Error": {
        "description": "401 Unauthorized",
        "content": {
          "application/json": {
            "example": "Unauthorized"
          }
        }
      },
      "422Error": {
        "description": "422 Unprocessable Entity",
        "content": {
          "application/json": {
            "example": {
              "errorCode": "invalid_token",
              "errorId": "error-19g6ll3ud3ndj",
              "message": "Order null not found",
              "httpStatusCode": 422
            }
          }
        }
      },
      "400Errorv1": {
        "description": "400 Bad Request",
        "content": {
          "application/json": {
            "example": {
              "errorCode": "pre_condition_failed",
              "errorId": "error-19g6ll3uee193",
              "message": "Order null not found",
              "httpStatusCode": 400
            }
          }
        }
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header",
        "x-default": "Bearer qhtfs87hjnc12kkos"
      }
    }
  },
  "x-samples-enabled": true,
  "x-explorer-enabled": true
}