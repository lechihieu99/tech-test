{
  "openapi": "3.0.1",
  "info": {
    "title": "Reporting API",
    "description": "Reporting API",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://integration.api.scalapay.com",
      "description": "Sandbox server (uses test data)"
    },
    {
      "url": "https://api.scalapay.com",
      "description": "Production server (uses live data)"
    }
  ],
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "paths": {
    "/v1/reporting/orders": {
      "get": {
        "summary": "get orders",
        "description": "The transactions call is designed to enable merchants to reconcile their bank transactions with orders and refunds within the Scalapay platform. In order to access the endpoint the bearerToken using the scalapay API key is required.",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "description": "\"YYYY-MM-DD\" format. The start date for the bank transactions to be returned (default: today)",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "minimum": 1,
              "type": "string",
              "format": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "\"YYYY-MM-DD\" format. The end date for the bank transactions to be returned (default: today)",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "minimum": 1,
              "type": "string",
              "format": "string"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The number of items returned (default: 5000)",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "maximum": 5000,
              "minimum": 0,
              "type": "integer",
              "format": "integer",
              "default": 5000
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to show (default: 0)",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "integer",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "example": {
                  "items": [
                    {
                      "orderStatus": "charged",
                      "orderTokenLast4": "******AYPA",
                      "orderCreatedDate": "2022-05-26T15:28:53.000",
                      "type": "online",
                      "product": "pay-in-3",
                      "merchantReference": "merchantOrder-1234",
                      "captureStatus": "captured",
                      "captureAmount": {
                        "amount": "10.00",
                        "currency": "EUR"
                      },
                      "transferId": "tr_1L3ZJ6FHjEtCWkTsJqGDRYXZ",
                      "payoutDetails": {
                        "merchantPayoutToken": "3BQD2I26MRG3",
                        "transactionDate": "2022-05-27T11:19:52.000",
                        "status": "processed",
                        "grossAmount": {
                          "currency": "EUR",
                          "amount": "10.00"
                        },
                        "netAmount": {
                          "currency": "EUR",
                          "amount": "10.00"
                        },
                        "totalFeeAmount": {
                          "currency": "EUR",
                          "amount": "0.98"
                        },
                        "scalapayFeeAmount": {
                          "currency": "EUR",
                          "amount": "0.80"
                        },
                        "scalapayFeeTaxAmount": {
                          "currency": "EUR",
                          "amount": "0.18"
                        },
                        "otherFeeAmount": {
                          "currency": "EUR",
                          "amount": "0.00"
                        },
                        "otherFeeTaxAmount": {
                          "currency": "EUR",
                          "amount": "0.00"
                        }
                      }
                    },
                    {
                      "orderStatus": "authorized",
                      "orderTokenLast4": "******FH4R",
                      "orderCreatedDate": "2022-06-13T20:50:35.000",
                      "type": "online",
                      "product": "pay-in-3",
                      "merchantReference": "OjbKlbnuMNMlN9j_g9dqdIhh",
                      "captureStatus": "delayed",
                      "captureAmount": {
                        "amount": "0.00",
                        "currency": "EUR"
                      }
                    }
                  ],
                  "total": 2,
                  "page": 0,
                  "size": 5000,
                  "hasMore": false
                }
              }
            }
          },
          "400": {
            "description": "400 Bad request",
            "content": {
              "application/json": {
                "example": {
                  "errorCode": "pre_condition_failed",
                  "errorId": "error-19g6il4h3evp0",
                  "message": "startDate cannot be greater than endDate",
                  "httpStatusCode": 400
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "example": "Unauthorized"
              }
            }
          }
        }
      }
    },
    "/v1/reporting/refunds": {
      "get": {
        "summary": "get refunds",
        "description": "The transactions call is designed to enable merchants to reconcile their bank transactions with orders and refunds within the Scalapay platform. In order to access the endpoint the bearerToken using the scalapay API key is required.",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "description": "\"YYYY-MM-DD\" format. The start date for the bank transactions to be returned (default: today)",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "minimum": 1,
              "type": "string",
              "format": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "\"YYYY-MM-DD\" format. The end date for the bank transactions to be returned (default: today)",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "minimum": 1,
              "type": "string",
              "format": "string"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The number of items returned (default: 5000)",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "maximum": 5000,
              "minimum": 0,
              "type": "integer",
              "format": "integer",
              "default": 5000
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to show (default: 0)",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "integer",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "example": {
                  "items": [
                    {
                      "orderStatus": "charged",
                      "orderTokenLast4": "******AYPA",
                      "orderCreatedDate": "2022-05-26T15:28:53.000",
                      "type": "online",
                      "product": "pay-in-3",
                      "merchantReference": "merchantOrder-1234",
                      "captureStatus": "captured",
                      "captureAmount": {
                        "amount": "10.00",
                        "currency": "EUR"
                      },
                      "transferId": "tr_1L3ZJ6FHjEtCWkTsJqGDRYXZ",
                      "payoutDetails": {
                        "merchantPayoutToken": "3BQD2I26MRG3",
                        "transactionDate": "2022-05-27T11:19:52.000",
                        "status": "processed",
                        "grossAmount": {
                          "currency": "EUR",
                          "amount": "10.00"
                        },
                        "netAmount": {
                          "currency": "EUR",
                          "amount": "10.00"
                        },
                        "totalFeeAmount": {
                          "currency": "EUR",
                          "amount": "0.98"
                        },
                        "scalapayFeeAmount": {
                          "currency": "EUR",
                          "amount": "0.80"
                        },
                        "scalapayFeeTaxAmount": {
                          "currency": "EUR",
                          "amount": "0.18"
                        },
                        "otherFeeAmount": {
                          "currency": "EUR",
                          "amount": "0.00"
                        },
                        "otherFeeTaxAmount": {
                          "currency": "EUR",
                          "amount": "0.00"
                        }
                      }
                    },
                    {
                      "orderStatus": "authorized",
                      "orderTokenLast4": "******FH4R",
                      "orderCreatedDate": "2022-06-13T20:50:35.000",
                      "type": "online",
                      "product": "pay-in-3",
                      "merchantReference": "OjbKlbnuMNMlN9j_g9dqdIhh",
                      "captureStatus": "delayed",
                      "captureAmount": {
                        "amount": "0.00",
                        "currency": "EUR"
                      }
                    }
                  ],
                  "total": 2,
                  "page": 0,
                  "size": 5000,
                  "hasMore": false
                }
              }
            }
          },
          "400": {
            "description": "400 Bad request",
            "content": {
              "application/json": {
                "example": {
                  "errorCode": "pre_condition_failed",
                  "errorId": "error-19g6il4h3evp0",
                  "message": "startDate cannot be greater than endDate",
                  "httpStatusCode": 400
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "example": "Unauthorized"
              }
            }
          }
        }
      }
    },
    "/v1/reporting/payouts": {
      "get": {
        "summary": "get payouts",
        "description": "The payouts call is designed to enable merchants to get the list of all the payouts received from Scalapay. In order to access the endpoint the bearerToken using the scalapay API key is required.",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "description": "\"YYYY-MM-DD\" format. The start date for the bank transactions to be returned (default: today)",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "minimum": 1,
              "type": "string",
              "format": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "\"YYYY-MM-DD\" format. The end date for the bank transactions to be returned (default: today)",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "minimum": 1,
              "type": "string",
              "format": "string"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The number of items returned (default: 5000)",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "maximum": 5000,
              "minimum": 0,
              "type": "integer",
              "format": "integer",
              "default": 5000
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to show (default: 0)",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "integer",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "example": {
                  "items": [
                    {
                      "merchantPayoutToken": "FELGDH3XJDRS",
                      "transactionDate": "2022-05-26T11:29:55.000",
                      "totalAmount": {
                        "amount": "26080.02",
                        "currency": "EUR"
                      },
                      "status": "processed"
                    },
                    {
                      "merchantPayoutToken": "3BQD2I26MRG3",
                      "transactionDate": "2022-05-27T11:19:52.000",
                      "totalAmount": {
                        "amount": "24188.61",
                        "currency": "EUR"
                      },
                      "status": "processed"
                    }
                  ],
                  "total": 2,
                  "page": 0,
                  "size": 5000,
                  "hasMore": false
                }
              }
            }
          },
          "400": {
            "description": "400 Bad request",
            "content": {
              "application/json": {
                "example": {
                  "errorCode": "pre_condition_failed",
                  "errorId": "error-19g6il4h3evp0",
                  "message": "startDate cannot be greater than endDate",
                  "httpStatusCode": 400
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "example": "Unauthorized"
              }
            }
          }
        }
      }
    },
    "/v1/reporting/payouts/{token}/orders": {
      "get": {
        "summary": "get orders from payout",
        "description": "The payouts/orders call is designed to enable merchants to get the list of all orders of a payout. In order to access the endpoint the bearerToken using the scalapay API key is required.",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Payout Token",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "minimum": 1,
              "type": "string",
              "format": "string"
            },
            "example": "3BQD2I26MRG3"
          },
          {
            "name": "size",
            "in": "query",
            "description": "The number of items returned (default: 5000)",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "maximum": 5000,
              "minimum": 0,
              "type": "integer",
              "format": "integer",
              "default": 5000
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to show (default: 0)",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "integer",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "example": {
                  "items": [
                    {
                      "orderStatus": "charged",
                      "orderTokenLast4": "******AYPA",
                      "orderCreatedDate": "2022-05-26T15:28:53.000",
                      "type": "online",
                      "product": "pay-in-3",
                      "merchantReference": "merchantOrder-1234",
                      "captureStatus": "captured",
                      "captureAmount": {
                        "amount": "10.00",
                        "currency": "EUR"
                      },
                      "transferId": "tr_1L3ZJ6FHjEtCWkTsJqGDRYXZ",
                      "details": {
                        "grossAmount": {
                          "currency": "EUR",
                          "amount": "10.00"
                        },
                        "netAmount": {
                          "currency": "EUR",
                          "amount": "10.00"
                        },
                        "totalFeeAmount": {
                          "currency": "EUR",
                          "amount": "0.98"
                        },
                        "scalapayFeeAmount": {
                          "currency": "EUR",
                          "amount": "0.80"
                        },
                        "scalapayFeeTaxAmount": {
                          "currency": "EUR",
                          "amount": "0.18"
                        },
                        "otherFeeAmount": {
                          "currency": "EUR",
                          "amount": "0.00"
                        },
                        "otherFeeTaxAmount": {
                          "currency": "EUR",
                          "amount": "0.00"
                        }
                      }
                    },
                    {
                      "orderStatus": "charged",
                      "orderTokenLast4": "******YKNN",
                      "orderCreatedDate": "2022-05-26T16:12:49.000",
                      "type": "online",
                      "product": "pay-in-3",
                      "merchantReference": "merchantOrder-1234",
                      "captureStatus": "captured",
                      "captureAmount": {
                        "amount": "10.00",
                        "currency": "EUR"
                      },
                      "transferId": "tr_1L3ZwoFHjEtCWkTsMyDuEAm4",
                      "details": {
                        "grossAmount": {
                          "currency": "EUR",
                          "amount": "10.00"
                        },
                        "netAmount": {
                          "currency": "EUR",
                          "amount": "10.00"
                        },
                        "totalFeeAmount": {
                          "currency": "EUR",
                          "amount": "0.98"
                        },
                        "scalapayFeeAmount": {
                          "currency": "EUR",
                          "amount": "0.80"
                        },
                        "scalapayFeeTaxAmount": {
                          "currency": "EUR",
                          "amount": "0.18"
                        },
                        "otherFeeAmount": {
                          "currency": "EUR",
                          "amount": "0.00"
                        },
                        "otherFeeTaxAmount": {
                          "currency": "EUR",
                          "amount": "0.00"
                        }
                      }
                    }
                  ],
                  "total": 2,
                  "page": 0,
                  "size": 5000,
                  "hasMore": false
                }
              }
            }
          },
          "400": {
            "description": "400 Bad request",
            "content": {
              "application/json": {
                "example": {
                  "errorCode": "pre_condition_failed",
                  "errorId": "error-19g6il4h6tr5l",
                  "message": "an invalidmerchant PayoutToken was provided",
                  "httpStatusCode": 400
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "example": "Unauthorized"
              }
            }
          }
        }
      }
    },
    "/v1/reporting/payouts/{token}/refunds": {
      "get": {
        "summary": "get refunds from payout",
        "description": "The payouts/refunds call is designed to enable merchants to get the list of all refunds of a payout. In order to access the endpoint the bearerToken using the scalapay API key is required.",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Payout Token",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "minimum": 1,
              "type": "string",
              "format": "string"
            },
            "example": "NRF55213PDYK"
          },
          {
            "name": "size",
            "in": "query",
            "description": "The number of items returned (default: 5000)",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "maximum": 5000,
              "minimum": 0,
              "type": "integer",
              "format": "integer",
              "default": 5000
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to show (default: 0)",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "integer",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "example": {
                  "items": [
                    {
                      "orderTokenLast4": "******TNV9",
                      "merchantReference": "merchantOrder-1234",
                      "refundAmount": {
                        "amount": "20.00",
                        "currency": "EUR"
                      },
                      "transferId": "trr_1L5M7hFHjEtCWkTsWAIDNuta",
                      "details": {
                        "grossAmount": {
                          "amount": "20.00",
                          "currency": "EUR"
                        },
                        "netAmount": {
                          "amount": "20.00",
                          "currency": "EUR"
                        },
                        "totalFeeAmount": {
                          "amount": "-1.22",
                          "currency": "EUR"
                        },
                        "scalapayFeeAmount": {
                          "amount": "-1.00",
                          "currency": "EUR"
                        },
                        "scalapayFeeTaxAmount": {
                          "amount": "-0.22",
                          "currency": "EUR"
                        },
                        "otherFeeAmount": {
                          "amount": "0.00",
                          "currency": "EUR"
                        },
                        "otherFeeTaxAmount": {
                          "amount": "0.00",
                          "currency": "EUR"
                        }
                      }
                    },
                    {
                      "orderTokenLast4": "******JHP2",
                      "merchantReference": "merchantOrder-1234",
                      "refundAmount": {
                        "amount": "20.00",
                        "currency": "EUR"
                      },
                      "transferId": "trr_1L5M90FHjEtCWkTsoyHuImNL",
                      "details": {
                        "grossAmount": {
                          "amount": "20.00",
                          "currency": "EUR"
                        },
                        "netAmount": {
                          "amount": "20.00",
                          "currency": "EUR"
                        },
                        "totalFeeAmount": {
                          "amount": "-1.22",
                          "currency": "EUR"
                        },
                        "scalapayFeeAmount": {
                          "amount": "-1.00",
                          "currency": "EUR"
                        },
                        "scalapayFeeTaxAmount": {
                          "amount": "-0.22",
                          "currency": "EUR"
                        },
                        "otherFeeAmount": {
                          "amount": "0.00",
                          "currency": "EUR"
                        },
                        "otherFeeTaxAmount": {
                          "amount": "0.00",
                          "currency": "EUR"
                        }
                      }
                    }
                  ],
                  "total": 2,
                  "page": 0,
                  "size": 500,
                  "hasMore": false
                }
              }
            }
          },
          "400": {
            "description": "400 Bad request",
            "content": {
              "application/json": {
                "example": {
                  "errorCode": "pre_condition_failed",
                  "errorId": "error-19g6il4h6tr5l",
                  "message": "an invalidmerchant PayoutToken was provided",
                  "httpStatusCode": 400
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "example": "Unauthorized"
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {},
    "responses": {
      "401Error": {
        "description": "401 Unauthorized",
        "content": {
          "application/json": {
            "example": "Unauthorized"
          }
        }
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header",
        "x-default": "Bearer qhtfs87hjnc12kkos"
      }
    }
  },
  "x-samples-enabled": true,
  "x-explorer-enabled": true
}